TASK 2.0
----------------------------
worked with Gemini API (gemini-1.5-flash)
------------------------------------------


Dataset used:
--------------------
redmi dataset: https://www.kaggle.com/datasets/parve05/customer-review-dataset?utm_source=chatgpt.com
amazon dataset: https://www.kaggle.com/datasets/mehmetisik/amazon-review

Prompts used:
-----------------------

1.   "You are an expert sentiment analysis agent. Your task is to classify user feedback into one of three categories:
    - POSITIVE
    - NEGATIVE
    - NEUTRAL

    Please provide the sentiment classification for the following feedback:"


2. "You are an expert sentiment analysis agent. Your task is to classify user feedback into one of three categories:
    - POSITIVE
    - NEGATIVE
    - NEUTRAL

    Please provide the sentiment classification for the following feedback:"

3.   """You are an expert in sentiment analysis. Categorize the following feedback as:
    - POSITIVE
    - NEGATIVE
    - NEUTRAL
    Feedback: "{feedback}"
    Only return one of these words.""",

    """Analyze the sentiment of the given user feedback. Reply with:
    - POSITIVE if the feedback is appreciative.
    - NEGATIVE if the feedback is critical.
    - NEUTRAL if the feedback is neither positive nor negative.
    Feedback: "{feedback}"
    Respond with only one category: POSITIVE, NEGATIVE, or NEUTRAL.""",

    """Classify the following feedback into one of these categories: POSITIVE, NEGATIVE, NEUTRAL.
    Feedback: "{feedback}"
    Provide only the sentiment category without additional explanation."""

# working
------------------

Code 1.0: (used amazon.csv)

1. Load API key from .env file
2. Uploads a CSV file containing feedback.
3. Processes feedback using Gemini Flash 1.5.
4. Categorizes each feedback as POSITIVE, NEGATIVE, or NEUTRAL.
5. Displays sentiment results in the console.
6. Reduce request rate(RPM) using time.sleep() Pauses 5 seconds between requests to avoid hitting rate limits
7.  Improved error handling in case of API failures
8. Saves results to sentiment_result.csv for easy access.

Dataset:amazon_feedback_dataset.zip.zip
Result: Result_1.0_amazondataset.xlsx

--------------------------------------------

Code 1.1: (used redmi.csv)

1. Load API key from .env file
2. Uploads a CSV file containing feedback.
3. Processes feedback using Gemini Flash 1.5.
4. Categorizes each feedback as POSITIVE, NEGATIVE, or NEUTRAL.
5. Displays sentiment results in the console.
6. Reduce request rate(RPM) using time.sleep() Pauses 5 seconds between requests to avoid hitting rate limits
7.  Improved error handling in case of API failures
8. Saves results to sentiment_result.csv for easy access.

Dataset:Data.zip
Result: Result_1.1_redmidataset.xlsx
-------------------------------------------------

Code-2: (Multiple Prompt Variations_amazon.csv)

1.The script tries 3 different prompt versions to improve sentiment classification.
2.Each version’s results are saved in a separate Excel file (sentiment_results_prompt_1.xlsx, sentiment_results_prompt_2.xlsx, etc.).
3.Excel File Structure:
First Sheet → "Sentiment Analysis" (Feedback & LLM response)
Second Sheet → "Prompt Used" (The prompt applied for that round)
4.After processing each prompt, the corresponding Excel file is automatically downloaded.

Dataset:amazon_feedback_dataset.zip.zip

Result:
sentiment_results_prompt_1.xlsx
sentiment_results_prompt_2.xlsx
sentiment_results_prompt_3.xlsx


